1/ Load VAEsynth.amxd on a Live MIDI track set to monitor in with your favourite MIDI controller connected and sending raw MIDI data to the chosen track (i.e. no control surface scripts active). Hit the little “Open in editor” button to see the Max for Live patch in its entirety. Toggle to choose the synthesis algorithm to use (oscillator bank or inverse short-term Fourier transform) and adjust the MIDI CC numbers used to set the latent variable to match your controller setup.
2/ Open VAEsynth.py and set the path to the trained VAE model to load, then comment/uncomment the appropriate sections according to the various available options (algorithm choice, VAE model details, etc.).
3/ Make sure the Python script’s output OSC client port and Max patch’s input OSC server port numbers match, then run the Python script. If nothing happens on MIDI input, change said port number and relaunch the script (requires restarting the Python kernel – annoying I know but I didn’t have time to set up a clean opening/closing procedure in pyOSC, sorry!).
4/ Play around with the latent variable controls and have fun exploring the VAE’s sonic latent space!